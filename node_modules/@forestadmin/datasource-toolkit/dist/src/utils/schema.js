"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class SchemaUtils {
    static getPrimaryKeys(schema) {
        return Object.keys(schema.fields).filter(fieldName => {
            const field = schema.fields[fieldName];
            return field.type === 'Column' && field.isPrimaryKey;
        });
    }
    static isForeignKey(schema, name) {
        const field = schema.fields[name];
        return (field.type === 'Column' &&
            Object.values(schema.fields).some(relation => relation.type === 'ManyToOne' && relation.foreignKey === name));
    }
    static getToManyRelation(schema, relationName) {
        const relationFieldSchema = schema.fields[relationName];
        if (!relationFieldSchema)
            throw new Error(`Relation '${relationName}' not found`);
        if (relationFieldSchema.type !== 'OneToMany' && relationFieldSchema.type !== 'ManyToMany') {
            throw new Error(`Relation ${relationName} has invalid type should be one of ` +
                `${'OneToMany'} or ${'ManyToMany'}.`);
        }
        return relationFieldSchema;
    }
}
exports.default = SchemaUtils;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NoZW1hLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWxzL3NjaGVtYS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBLE1BQXFCLFdBQVc7SUFDOUIsTUFBTSxDQUFDLGNBQWMsQ0FBQyxNQUF3QjtRQUM1QyxPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsRUFBRTtZQUNuRCxNQUFNLEtBQUssR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBRXZDLE9BQU8sS0FBSyxDQUFDLElBQUksS0FBSyxRQUFRLElBQUksS0FBSyxDQUFDLFlBQVksQ0FBQztRQUN2RCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxNQUFNLENBQUMsWUFBWSxDQUFDLE1BQXdCLEVBQUUsSUFBWTtRQUN4RCxNQUFNLEtBQUssR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRWxDLE9BQU8sQ0FDTCxLQUFLLENBQUMsSUFBSSxLQUFLLFFBQVE7WUFDdkIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUMvQixRQUFRLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEtBQUssV0FBVyxJQUFJLFFBQVEsQ0FBQyxVQUFVLEtBQUssSUFBSSxDQUMxRSxDQUNGLENBQUM7SUFDSixDQUFDO0lBRUQsTUFBTSxDQUFDLGlCQUFpQixDQUN0QixNQUF3QixFQUN4QixZQUFvQjtRQUVwQixNQUFNLG1CQUFtQixHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUM7UUFFeEQsSUFBSSxDQUFDLG1CQUFtQjtZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsYUFBYSxZQUFZLGFBQWEsQ0FBQyxDQUFDO1FBRWxGLElBQUksbUJBQW1CLENBQUMsSUFBSSxLQUFLLFdBQVcsSUFBSSxtQkFBbUIsQ0FBQyxJQUFJLEtBQUssWUFBWSxFQUFFO1lBQ3pGLE1BQU0sSUFBSSxLQUFLLENBQ2IsWUFBWSxZQUFZLHFDQUFxQztnQkFDM0QsR0FBRyxXQUFXLE9BQU8sWUFBWSxHQUFHLENBQ3ZDLENBQUM7U0FDSDtRQUVELE9BQU8sbUJBQXlELENBQUM7SUFDbkUsQ0FBQztDQUNGO0FBckNELDhCQXFDQyJ9