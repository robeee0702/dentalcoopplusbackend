import { Caller } from '../../interfaces/caller';
import { CollectionSchema } from '../../interfaces/schema';
import { RecordData } from '../../interfaces/record';
import CollectionDecorator from '../collection-decorator';
import DataSourceDecorator from '../datasource-decorator';
/** This decorator allows hiding fields */
export default class PublicationCollectionDecorator extends CollectionDecorator {
    readonly dataSource: DataSourceDecorator<PublicationCollectionDecorator>;
    private readonly unpublished;
    /** Show/hide fields from the schema */
    changeFieldVisibility(name: string, visible: boolean): void;
    create(caller: Caller, data: RecordData[]): Promise<RecordData[]>;
    protected refineSchema(childSchema: CollectionSchema): CollectionSchema;
    private isPublished;
}
//# sourceMappingURL=collection.d.ts.map