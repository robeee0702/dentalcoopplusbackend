import { ManyToManySchema, ManyToOneSchema, OneToManySchema, OneToOneSchema } from '../../interfaces/schema';
declare type PartialBy<T, K extends Extract<keyof T, string>> = Omit<T, K> & Partial<Pick<T, K>>;
export declare type PartialRelationSchema = PartialBy<ManyToOneSchema, 'foreignKeyTarget'> | PartialBy<OneToManySchema | OneToOneSchema, 'originKeyTarget'> | PartialBy<ManyToManySchema, 'foreignKeyTarget' | 'originKeyTarget'>;
export {};
//# sourceMappingURL=types.d.ts.map