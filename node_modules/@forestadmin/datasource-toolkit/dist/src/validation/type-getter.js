"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const luxon_1 = require("luxon");
const uuid_1 = require("uuid");
const types_1 = require("./types");
class TypeGetter {
    static get(value, typeContext) {
        if (Array.isArray(value))
            return TypeGetter.getArrayType(value, typeContext);
        if (typeof value === 'string')
            return TypeGetter.getTypeFromString(value, typeContext);
        if (typeof value === 'number' && !Number.isNaN(Number(value)))
            return 'Number';
        if (value instanceof Date && luxon_1.DateTime.fromJSDate(value).isValid)
            return 'Date';
        if (typeof value === 'boolean')
            return 'Boolean';
        if (typeof value === 'object' && typeContext === 'Json')
            return 'Json';
        return types_1.ValidationPrimaryTypes.Null;
    }
    static getArrayType(value, typeContext) {
        if (value.length === 0)
            return types_1.ValidationTypesArray.Empty;
        if (TypeGetter.isArrayOf('Number', value, typeContext))
            return types_1.ValidationTypesArray.Number;
        if (TypeGetter.isArrayOf('Uuid', value, typeContext))
            return types_1.ValidationTypesArray.Uuid;
        if (TypeGetter.isArrayOf('Boolean', value, typeContext))
            return types_1.ValidationTypesArray.Boolean;
        if (TypeGetter.isArrayOf('String', value, typeContext))
            return types_1.ValidationTypesArray.String;
        if (TypeGetter.isArrayOf('Enum', value, typeContext))
            return types_1.ValidationTypesArray.Enum;
        return types_1.ValidationPrimaryTypes.Null;
    }
    static getDateType(value) {
        const dateTime = luxon_1.DateTime.fromISO(value);
        if (dateTime.toISODate() === value)
            return 'Dateonly';
        if (dateTime.toISOTime().match(value))
            return 'Timeonly';
        return 'Date';
    }
    static getTypeFromString(value, typeContext) {
        if (['Enum', 'String'].includes(typeContext))
            return typeContext;
        if ((0, uuid_1.validate)(value))
            return 'Uuid';
        if (TypeGetter.isValidDate(value))
            return TypeGetter.getDateType(value);
        if (TypeGetter.isJson(value))
            return 'Json';
        if (TypeGetter.isPoint(value, typeContext))
            return 'Point';
        return 'String';
    }
    static isValidDate(value) {
        return luxon_1.DateTime.fromISO(value).isValid;
    }
    static isPoint(value, typeContext) {
        const potentialPoint = value.split(',');
        return (potentialPoint.length === 2 &&
            typeContext === 'Point' &&
            TypeGetter.get(potentialPoint.map(Number), 'Number') === types_1.ValidationTypesArray.Number);
    }
    static isJson(value) {
        try {
            return !!JSON.parse(value);
        }
        catch {
            return false;
        }
    }
    static isArrayOf(type, values, typeContext) {
        return values.every(item => TypeGetter.get(item, typeContext) === type);
    }
}
exports.default = TypeGetter;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZS1nZXR0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdmFsaWRhdGlvbi90eXBlLWdldHRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlDQUFpQztBQUNqQywrQkFBZ0Q7QUFHaEQsbUNBQXdGO0FBRXhGLE1BQXFCLFVBQVU7SUFDN0IsTUFBTSxDQUFDLEdBQUcsQ0FBQyxLQUFjLEVBQUUsV0FBNEI7UUFDckQsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQztZQUFFLE9BQU8sVUFBVSxDQUFDLFlBQVksQ0FBQyxLQUFLLEVBQUUsV0FBVyxDQUFDLENBQUM7UUFFN0UsSUFBSSxPQUFPLEtBQUssS0FBSyxRQUFRO1lBQUUsT0FBTyxVQUFVLENBQUMsaUJBQWlCLENBQUMsS0FBSyxFQUFFLFdBQVcsQ0FBQyxDQUFDO1FBRXZGLElBQUksT0FBTyxLQUFLLEtBQUssUUFBUSxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7WUFBRSxPQUFPLFFBQVEsQ0FBQztRQUUvRSxJQUFJLEtBQUssWUFBWSxJQUFJLElBQUksZ0JBQVEsQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUMsT0FBTztZQUFFLE9BQU8sTUFBTSxDQUFDO1FBRS9FLElBQUksT0FBTyxLQUFLLEtBQUssU0FBUztZQUFFLE9BQU8sU0FBUyxDQUFDO1FBRWpELElBQUksT0FBTyxLQUFLLEtBQUssUUFBUSxJQUFJLFdBQVcsS0FBSyxNQUFNO1lBQUUsT0FBTyxNQUFNLENBQUM7UUFFdkUsT0FBTyw4QkFBc0IsQ0FBQyxJQUFJLENBQUM7SUFDckMsQ0FBQztJQUVPLE1BQU0sQ0FBQyxZQUFZLENBQ3pCLEtBQXFCLEVBQ3JCLFdBQTRCO1FBRTVCLElBQUksS0FBSyxDQUFDLE1BQU0sS0FBSyxDQUFDO1lBQUUsT0FBTyw0QkFBb0IsQ0FBQyxLQUFLLENBQUM7UUFDMUQsSUFBSSxV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