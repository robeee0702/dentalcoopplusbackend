"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RELATED_RELATION_ROUTES_CTOR = exports.RELATED_ROUTES_CTOR = exports.COLLECTION_ROUTES_CTOR = exports.ROOT_ROUTES_CTOR = void 0;
const action_1 = __importDefault(require("./modification/action"));
const api_chart_1 = __importDefault(require("./access/api-chart"));
const associate_related_1 = __importDefault(require("./modification/associate-related"));
const authentication_1 = __importDefault(require("./security/authentication"));
const chart_1 = __importDefault(require("./access/chart"));
const count_1 = __importDefault(require("./access/count"));
const count_related_1 = __importDefault(require("./access/count-related"));
const create_1 = __importDefault(require("./modification/create"));
const csv_1 = __importDefault(require("./access/csv"));
const csv_related_1 = __importDefault(require("./access/csv-related"));
const delete_1 = __importDefault(require("./modification/delete"));
const dissociate_delete_related_1 = __importDefault(require("./modification/dissociate-delete-related"));
const error_handling_1 = __importDefault(require("./system/error-handling"));
const get_1 = __importDefault(require("./access/get"));
const healthcheck_1 = __importDefault(require("./system/healthcheck"));
const ip_whitelist_1 = __importDefault(require("./security/ip-whitelist"));
const list_1 = __importDefault(require("./access/list"));
const list_related_1 = __importDefault(require("./access/list-related"));
const logger_1 = __importDefault(require("./system/logger"));
const scope_invalidation_1 = __importDefault(require("./security/scope-invalidation"));
const update_1 = __importDefault(require("./modification/update"));
const update_relation_1 = __importDefault(require("./modification/update-relation"));
exports.ROOT_ROUTES_CTOR = [
    authentication_1.default,
    error_handling_1.default,
    healthcheck_1.default,
    ip_whitelist_1.default,
    logger_1.default,
    scope_invalidation_1.default,
];
exports.COLLECTION_ROUTES_CTOR = [chart_1.default, count_1.default, create_1.default, csv_1.default, delete_1.default, get_1.default, list_1.default, update_1.default];
exports.RELATED_ROUTES_CTOR = [
    associate_related_1.default,
    count_related_1.default,
    csv_related_1.default,
    dissociate_delete_related_1.default,
    list_related_1.default,
];
exports.RELATED_RELATION_ROUTES_CTOR = [update_relation_1.default];
function getRootRoutes(options, services) {
    return exports.ROOT_ROUTES_CTOR.map(Route => new Route(services, options));
}
function getApiChartRoutes(dataSource, options, services) {
    return dataSource.schema.charts.map(chartName => {
        return new api_chart_1.default(services, options, dataSource, chartName);
    });
}
function getCrudRoutes(dataSource, options, services) {
    const routes = [];
    dataSource.collections.forEach(collection => {
        routes.push(...exports.COLLECTION_ROUTES_CTOR.map(Route => new Route(services, options, dataSource, collection.name)));
    });
    return routes;
}
function getRelatedRoutes(dataSource, options, services) {
    const routes = [];
    const routesToBuild = [
        { list: exports.RELATED_ROUTES_CTOR, relations: ['ManyToMany', 'OneToMany'] },
        { list: exports.RELATED_RELATION_ROUTES_CTOR, relations: ['OneToOne', 'ManyToOne'] },
    ];
    dataSource.collections.forEach(collection => {
        routesToBuild.forEach(route => {
            const fields = Object.entries(collection.schema.fields);
            const relationFields = fields.filter(([, schema]) => route.relations.includes(schema.type));
            relationFields.forEach(([relationName]) => {
                routes.push(...route.list.map(Route => new Route(services, options, dataSource, collection.name, relationName)));
            });
        });
    });
    return routes;
}
function getActionRoutes(dataSource, options, services) {
    const routes = [];
    for (const collection of dataSource.collections)
        for (const actionName of Object.keys(collection.schema.actions))
            routes.push(new action_1.default(services, options, dataSource, collection.name, actionName));
    return routes;
}
function makeRoutes(dataSource, options, services) {
    const routes = [
        ...getRootRoutes(options, services),
        ...getCrudRoutes(dataSource, options, services),
        ...getApiChartRoutes(dataSource, options, services),
        ...getRelatedRoutes(dataSource, options, services),
        ...getActionRoutes(dataSource, options, services),
    ];
    // Ensure routes and middlewares are loaded in the right order.
    return routes.sort((a, b) => a.type - b.type);
}
exports.default = makeRoutes;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvYWdlbnQvcm91dGVzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUlBLG1FQUFnRDtBQUNoRCxtRUFBK0M7QUFDL0MseUZBQWdFO0FBQ2hFLCtFQUF1RDtBQUV2RCwyREFBbUM7QUFDbkMsMkRBQW1DO0FBQ25DLDJFQUFrRDtBQUNsRCxtRUFBMkM7QUFDM0MsdURBQStCO0FBQy9CLHVFQUE4QztBQUM5QyxtRUFBMkM7QUFDM0MseUdBQStFO0FBQy9FLDZFQUFvRDtBQUNwRCx1REFBK0I7QUFDL0IsdUVBQStDO0FBQy9DLDJFQUFrRDtBQUNsRCx5REFBaUM7QUFDakMseUVBQWdEO0FBQ2hELDZEQUFxQztBQUNyQyx1RkFBOEQ7QUFDOUQsbUVBQTJDO0FBQzNDLHFGQUE0RDtBQUUvQyxRQUFBLGdCQUFnQixHQUFHO0lBQzlCLHdCQUFjO0lBQ2Qsd0JBQWE7SUFDYixxQkFBVztJQUNYLHNCQUFXO0lBQ1gsZ0JBQU07SUFDTiw0QkFBaUI7Q0FDbEIsQ0FBQztBQUNXLFFBQUEsc0JBQXNCLEdBQUcsQ0FBQyxlQUFLLEVBQUUsZUFBSyxFQUFFLGdCQUFNLEVBQUUsYUFBRyxFQUFFLGdCQUFNLEVBQUUsYUFBRyxFQUFFLGNBQUksRUFBRSxnQkFBTSxDQUFDLENBQUM7QUFDaEYsUUFBQSxtQkFBbUIsR0FBRztJQUNqQywyQkFBZ0I7SUFDaEIsdUJBQVk7SUFDWixxQkFBVTtJQUNWLG1DQUF1QjtJQUN2QixzQkFBVztDQUNaLENBQUM7QUFDVyxRQUFBLDRCQUE0QixHQUFHLENBQUMseUJBQWMsQ0FBQyxDQUFDO0FBRTdELFNBQVMsYUFBYSxDQUFDLE9BQWdCLEVBQUUsUUFBa0I7SUFDekQsT0FBTyx3QkFBZ0IsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxJQUFJLEtBQUssQ0FBQyxRQUFRLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQztB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